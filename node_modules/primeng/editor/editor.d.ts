import { ElementRef, AfterViewInit, EventEmitter, QueryList, AfterContentInit, TemplateRef, AfterViewChecked } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "primeng/api";
export declare const EDITOR_VALUE_ACCESSOR: any;
export declare class Editor implements AfterViewInit, AfterViewChecked, AfterContentInit, ControlValueAccessor {
    el: ElementRef;
    onTextChange: EventEmitter<any>;
    onSelectionChange: EventEmitter<any>;
    toolbar: any;
    style: any;
    styleClass: string;
    placeholder: string;
    formats: string[];
    modules: any;
    bounds: any;
    scrollingContainer: any;
    debug: string;
    onInit: EventEmitter<any>;
    templates: QueryList<any>;
    value: string;
    delayedCommand: Function | null;
    _readonly: boolean;
    onModelChange: Function;
    onModelTouched: Function;
    quill: any;
    headerTemplate: TemplateRef<any>;
    private get isAttachedQuillEditorToDOM();
    private quillElements;
    constructor(el: ElementRef);
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    ngAfterContentInit(): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    getQuill(): any;
    get readonly(): boolean;
    set readonly(val: boolean);
    private initQuillEditor;
    private initQuillElements;
    static ɵfac: i0.ɵɵFactoryDeclaration<Editor, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<Editor, "p-editor", never, { "style": { "alias": "style"; "required": false; }; "styleClass": { "alias": "styleClass"; "required": false; }; "placeholder": { "alias": "placeholder"; "required": false; }; "formats": { "alias": "formats"; "required": false; }; "modules": { "alias": "modules"; "required": false; }; "bounds": { "alias": "bounds"; "required": false; }; "scrollingContainer": { "alias": "scrollingContainer"; "required": false; }; "debug": { "alias": "debug"; "required": false; }; "readonly": { "alias": "readonly"; "required": false; }; }, { "onTextChange": "onTextChange"; "onSelectionChange": "onSelectionChange"; "onInit": "onInit"; }, ["toolbar", "templates"], ["p-header"], false, never>;
}
export declare class EditorModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<EditorModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<EditorModule, [typeof Editor], [typeof i1.CommonModule], [typeof Editor, typeof i2.SharedModule]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<EditorModule>;
}
